#!/bin/sh
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[1;30m' # No Color
DEF='\033[0m' # Default Color
DEVICE_NAME="FPT-"$(hostname)

LOCK_STATE=$HOME/.agent/.lock-state
OWNER_STATE=$HOME/.agent/.device-owner
SERVICE_STATE=$HOME/.agent/.service-endpoint
ENDPOINT_STATE=$HOME/.agent/.aws-endpoint
CERTS_STATE=$HOME/.agent/certs
TIMESTAMP=$(date +%s000)

if [ -f $CERTS_STATE ];
then
   	echo -e "${BLUE}INFO: The certificates of device ${DEVICE_ID} has already installed successfully.${NC}"
else	
	DEVICE_OBJECT=$(curl -H "Content-Type: application/json" -L ${SERVICE_ENDPOINT}/apisrv/device-management-service/device/${DEVICE_ID}?secret_key=${SECRET_KEY})
	DEVICE_STATUS=$(echo ${DEVICE_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['status']" 2> /dev/null)
	AWS_IOT_ENDPOINT=$(echo ${DEVICE_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['_metadata']['serviceEndpoint']" 2> /dev/null)	
	echo "${DEVICE_STATUS}" > "${LOCK_STATE}"
	echo "${DEVICE_OWNER}" > ${OWNER_STATE}
	echo "${SERVICE_ENDPOINT}" > ${SERVICE_STATE}
	echo "${AWS_IOT_ENDPOINT}" > ${ENDPOINT_STATE}
	
	if [ "${DEVICE_STATUS}" = "registered" ]; then
		citus-device install-cert
	elif [ "${DEVICE_STATUS}" = "unregistered" ]; then
		echo -e "${YELLOW}WARN: The device ${DEVICE_ID} has not activated yet therefore no certificate is available.${NC}"
	else
		echo -e "${RED}ERROR: ${DEVICE_OBJECT}${NC}"
	fi
fi
echo -e "${DEF}"