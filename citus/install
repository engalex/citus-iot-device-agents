#!/bin/sh
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[1;30m' # No Color
DEF='\033[0m' # Default Color
DEVICE_NAME="FPT-"$(hostname)
ACCESS_TOKEN=${1:-Unknown}

CERTS_STATE=$HOME/.agent/certs
if [ -f $CERTS_STATE ];
then
   	echo -e "${BLUE}INFO: The certificates of device ${DEVICE_ID} has already installed successfully.${NC}"
else	
	DEVICE_OBJECT=$(curl -H "Content-Type: application/json" -L ${SERVICE_ENDPOINT}/apisrv/device-lifecycle-service/device/${DEVICE_ID}?secret_key=${SECRET_KEY})
	DEVICE_OWNER=$(echo ${DEVICE_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['owner']" 2> /dev/null)
	DEVICE_STATUS=$(echo ${DEVICE_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['status']" 2> /dev/null)
	CERTIFICATE_ID=$(echo ${DEVICE_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['_metadata']['certificateId']" 2> /dev/null)
	
	if [ "${DEVICE_STATUS}" == "registered" ]; then		
		PAYLOAD=$(curl -H "Content-Type: application/json" --header "Authorization: Bearer ${ACCESS_TOKEN}" -L ${SERVICE_ENDPOINT}/certificate/${CERTIFICATE_ID})
		mkdir -p $HOME/.agent/certs/
		RESULT=$(echo ${PAYLOAD} | python -c "import sys, json; print json.load(sys.stdin)['certificatePem']" 2> /dev/null)
		if [ -n "${RESULT}" ]; then	
			echo "${RESULT}" >> "$HOME/.agent/certs/${DEVICE_ID}-certificate.pem.crt"
			RESULT=$(echo ${PAYLOAD} | python -c "import sys, json; print json.load(sys.stdin)['keyPair']['PrivateKey']" 2> /dev/null)	
			echo "${RESULT}" >> "$HOME/.agent/certs/${DEVICE_ID}-private.pem.key"
			curl -o "$HOME/.agent/certs/root-CA.crt" https://www.symantec.com/content/en/us/enterprise/verisign/roots/VeriSign-Class%203-Public-Primary-Certification-Authority-G5.pem
			
			GEOIP_OBJECT=$(curl -H "Content-Type: application/json" -L ${SERVICE_ENDPOINT}/geoip)
			GEO_LOCATION=$(echo ${GEOIP_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['address']" 2> /dev/null)
			GEO_LATITUDE=$(echo ${GEOIP_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['latitude']" 2> /dev/null)
			GEO_LONGITUDE=$(echo ${GEOIP_OBJECT} | python -c "import sys, json; print json.load(sys.stdin)['longitude']" 2> /dev/null)
			RESULT=$(curl -H "Content-Type: application/json" -X PUT -d '{"name":"'"${DEVICE_ID}"'","owner":"'"${DEVICE_OWNER}"'","_metadata":{"name":"'"${DEVICE_NAME}"'","type": "Default","location": "'"${GEO_LOCATION}"'","latitude": "'${GEO_LATITUDE}'","longitude": "'${GEO_LONGITUDE}'"}}' -L ${SERVICE_ENDPOINT}/apisrv/device-lifecycle-service/device/${DEVICE_ID}/_metadata?secret_key=${SECRET_KEY})
			echo -e "${YELLOW}INFO: Installed Certificates:${NC}"
			ls -td $(find $HOME/.agent/certs/)
			(echo "* * * * * /usr/sbin/citus-device update >$HOME/.agent/update.log ") | crontab -
		else
			echo -e "${RED}ERROR: No certificates bundle found!${NC}"
		fi
	elif [ "${DEVICE_STATUS}" == "unregistered" ]; then
		echo -e "${YELLOW}WARN: The device ${DEVICE_ID} has not activated yet therefore no certificate is available.${NC}"
	else
		echo -e "${RED}ERROR: ${DEVICE_OBJECT}${NC}"
	fi
fi
echo -e "${DEF}"